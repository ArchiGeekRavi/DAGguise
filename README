## DAGguise 

This is the official performance demonstration for the DAGguise shaper system, as
first described in *DAGguise: Mitigating Memory Timing Side Channels*, by Peter Deutsch, Yuheng Yang, Thomas Bourgeat, Jules Drean, Joel Emer, and Mengjia Yan, ASPLOS 2022.

## Repository Overview

This main repository contains a modified fork (last commit in Februrary 2020) of the modified gem5 simulator. Apart from miscellaneous glue logic, all changes pertinent to the DAGguise shaper are contained in the DRAMSim2 submodule.

Important folders include:
   - **/runscripts/** - 

## Setup

   1. Ensure that you have all the [Gem5 prerequisites installed](https://www.gem5.org/documentation/general_docs/building)
   2. Clone the repository using *git clone --recurse-submodules*. 
   3. To build, in the root directory run *scons -jN build/X86/gem5.opt*, where N is the number of cores to use during compilation. The more cores the better, on a 2016 4-core i7, this takes about 1 hour to complete.

## Running the Simulator

In addition to the standard Gem5 run flags, three additional flags are important for evaluating DAGguise
   1. **--dramdeviceconfigfile** A DRAMSim2 file description of the DRAM specification, including DRAM timing parameters, bank settings, etc. All evaluation was performed using the *ini/DDR3_micron_32M_8B_x8_sg125.ini* configuration.
   2. **--dramsystemconfigfile** A DRAMSim2 file description of system-wide settings including, most importantly, the protection scheme to use.

   Included configuration files (found in ext/dramsim2/DRAMSim2) include:
      - DAGguise, FS-BTA, and Standard Configurations
      - 2/4/8 Domain Configurations
      - Open/Closed Row Configurations
   3. **--dagprotectionfile** If the DAGguise shaper is enabled, this tells the shaper **which** defense rDAG to use.

## TODO to explain

describe SPEC_ROOT GEM5_ROOT

docker build -t dagguise . -f docker/Dockerfile
docker run --rm -it --entrypoint bash dagguise
